{"ast":null,"code":"import _slicedToArray from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mollygraham/Workout-App/Solved/client/src/components/Timer/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./style.css\";\n\nvar Timer = function Timer() {\n  var _useState = useState(30),\n      _useState2 = _slicedToArray(_useState, 2),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isActive = _useState4[0],\n      setIsActive = _useState4[1]; // When the toggle function is called it will change the value of isActive to be the opposite of what it currently is.\n\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(30);\n    setIsActive(false);\n  }\n\n  useEffect(function () {\n    var interval = null;\n\n    if (isActive) {\n      interval = setInterval(function () {\n        setSeconds(function (seconds) {\n          return seconds - 1;\n        });\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isActive, seconds]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, seconds, \"s\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button button-primary button-primary-\".concat(isActive ? 'active' : 'inactive'),\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, isActive ? \"Start\" : \"Pause\"), React.createElement(\"button\", {\n    className: \"button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/mollygraham/Workout-App/Solved/client/src/components/Timer/index.js"],"names":["React","useState","useEffect","Timer","seconds","setSeconds","isActive","setIsActive","toggle","reset","interval","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBAEcF,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,MAETG,OAFS;AAAA,MAEAC,UAFA;;AAAA,mBAGgBJ,QAAQ,CAAC,KAAD,CAHxB;AAAA;AAAA,MAGTK,QAHS;AAAA,MAGCC,WAHD,kBAKhB;;;AACA,WAASC,MAAT,GAAkB;AACdD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASG,KAAT,GAAiB;AACbJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,QAAQ,GAAG,IAAf;;AACA,QAAIJ,QAAJ,EAAc;AACZI,MAAAA,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC3BN,QAAAA,UAAU,CAAC,UAAAD,OAAO;AAAA,iBAAIA,OAAO,GAAG,CAAd;AAAA,SAAR,CAAV;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCQ,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO;AAAA,aAAME,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACH,GAVQ,EAUN,CAACJ,QAAD,EAAWF,OAAX,CAVM,CAAT;AAYA,SACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,MADF,EAIE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,iDAA0CE,QAAQ,GAAG,QAAH,GAAc,UAAhE,CAAjB;AAA+F,IAAA,OAAO,EAAEE,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OAAH,GAAa,OADxB,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEG,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAJF,CADA;AAeD,CA1CH;;AA4CE,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./style.css\";\n\n\nconst Timer = () => {\n\n    const [seconds, setSeconds] = useState(30);\n    const [isActive, setIsActive] = useState(false);\n\n    // When the toggle function is called it will change the value of isActive to be the opposite of what it currently is.\n    function toggle() {\n        setIsActive(!isActive);\n    }\n\n    function reset() {\n        setSeconds(30);\n        setIsActive(false);\n    }\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n          interval = setInterval(() => {\n            setSeconds(seconds => seconds - 1);\n          }, 1000);\n        } else if (!isActive && seconds !== 0) {\n          clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {seconds}s\n      </div>\n      <div className=\"row\">\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? \"Start\" : \"Pause\"}\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n  };\n  \n  export default Timer;\n"]},"metadata":{},"sourceType":"module"}