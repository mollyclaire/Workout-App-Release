{"ast":null,"code":"import _classCallCheck from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollygraham/Workout-App/Solved/client/src/components/Title/index.js\";\nimport React from 'react';\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  function Countdown(props) {\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Countdown).call(this, props));\n    _this.state = {\n      countdownSeconds: 3,\n      roundSeconds: 60\n    };\n    _this.countdown = _this.countdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.roundCountdown = _this.roundCountdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (!this.countdownTimer) {\n        this.countdownTimer = setInterval(this.countdown, 1000);\n      }\n    }\n  }, {\n    key: \"countdown\",\n    value: function countdown() {\n      var currentSeconds = this.state.countdownSeconds - 1;\n      this.setState({\n        countdownSeconds: currentSeconds\n      });\n\n      if (currentSeconds === 0) {\n        this.roundTimer = setInterval(this.roundCountdown, 1000);\n        clearInterval(this.countdownTimer);\n      }\n    }\n  }, {\n    key: \"roundCountdown\",\n    value: function roundCountdown() {\n      var currentSeconds = this.state.roundSeconds - 1;\n      this.setState({\n        roundSeconds: currentSeconds\n      });\n\n      if (currentSeconds === 0) {\n        //do whatever\n        clearInterval(this.roundTimer);\n      }\n    }\n  }, {\n    key: \"renderTimer\",\n    value: function renderTimer() {\n      var _this$state = this.state,\n          countdownSeconds = _this$state.countdownSeconds,\n          roundSeconds = _this$state.roundSeconds;\n\n      if (countdownSeconds > 0) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Counting down...\", countdownSeconds);\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Round underway...\", roundSeconds);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderTimer());\n    }\n  }]);\n\n  return Countdown;\n}(React.Component);\n\nexport default Countdown;\n;","map":{"version":3,"sources":["/Users/mollygraham/Workout-App/Solved/client/src/components/Title/index.js"],"names":["React","Countdown","props","state","countdownSeconds","roundSeconds","countdown","bind","roundCountdown","startTimer","countdownTimer","setInterval","currentSeconds","setState","roundTimer","clearInterval","renderTimer","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,CADT;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAKA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AAVe;AAWlB;;;;iCAEY;AACT,UAAG,CAAC,KAAKG,cAAT,EAAyB;AACrB,aAAKA,cAAL,GAAsBC,WAAW,CAAC,KAAKL,SAAN,EAAiB,IAAjB,CAAjC;AACH;AACJ;;;gCAEW;AACR,UAAMM,cAAc,GAAG,KAAKT,KAAL,CAAWC,gBAAX,GAA8B,CAArD;AAEA,WAAKS,QAAL,CAAc;AACVT,QAAAA,gBAAgB,EAAEQ;AADR,OAAd;;AAIA,UAAGA,cAAc,KAAK,CAAtB,EAAyB;AACrB,aAAKE,UAAL,GAAkBH,WAAW,CAAC,KAAKH,cAAN,EAAsB,IAAtB,CAA7B;AACAO,QAAAA,aAAa,CAAC,KAAKL,cAAN,CAAb;AACH;AACJ;;;qCAEgB;AACb,UAAME,cAAc,GAAG,KAAKT,KAAL,CAAWE,YAAX,GAA0B,CAAjD;AAEA,WAAKQ,QAAL,CAAc;AACVR,QAAAA,YAAY,EAAEO;AADJ,OAAd;;AAIA,UAAGA,cAAc,KAAK,CAAtB,EAAyB;AACrB;AACAG,QAAAA,aAAa,CAAC,KAAKD,UAAN,CAAb;AACH;AACJ;;;kCAEa;AAAA,wBACiC,KAAKX,KADtC;AAAA,UACFC,gBADE,eACFA,gBADE;AAAA,UACgBC,YADhB,eACgBA,YADhB;;AAGV,UAAGD,gBAAgB,GAAG,CAAtB,EAAyB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuBA,gBAAvB,CAAP;AACH;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwBC,YAAxB,CAAP;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKW,WAAL,EADL,CADJ;AAKH;;;;EA9DmBhB,KAAK,CAACiB,S;;AAiE9B,eAAehB,SAAf;AAAyB","sourcesContent":["import React from 'react';\n\n\nclass Countdown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            countdownSeconds: 3,\n            roundSeconds: 60\n        };\n\n        this.countdown = this.countdown.bind(this);\n        this.roundCountdown = this.roundCountdown.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n    }\n\n    startTimer() {\n        if(!this.countdownTimer) {\n            this.countdownTimer = setInterval(this.countdown, 1000);\n        }\n    }\n\n    countdown() {\n        const currentSeconds = this.state.countdownSeconds - 1;\n\n        this.setState({\n            countdownSeconds: currentSeconds\n        });\n\n        if(currentSeconds === 0) {\n            this.roundTimer = setInterval(this.roundCountdown, 1000);\n            clearInterval(this.countdownTimer);\n        }\n    }\n\n    roundCountdown() {\n        const currentSeconds = this.state.roundSeconds - 1;\n\n        this.setState({\n            roundSeconds: currentSeconds\n        });\n\n        if(currentSeconds === 0) {\n            //do whatever\n            clearInterval(this.roundTimer);\n        }\n    }\n\n    renderTimer() {\n        const { countdownSeconds, roundSeconds } = this.state;\n    \n        if(countdownSeconds > 0) {\n            return <span>Counting down...{countdownSeconds}</span>;\n        }\n    \n        return <span>Round underway...{roundSeconds}</span>;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderTimer()}\n            </div>\n        );\n    }\n}\n\nexport default Countdown;;"]},"metadata":{},"sourceType":"module"}