{"ast":null,"code":"import _classCallCheck from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollygraham/Workout-App/Solved/client/src/pages/Exercise.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Timer from \"../components/Timer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\n\nvar Exercise =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exercise, _Component);\n\n  function Exercise() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Exercise);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Exercise)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      exercises: [],\n      title: \"\"\n    };\n\n    _this.loadExercises = function () {\n      API.getExercises().then(function (res) {\n        return _this.setState({\n          exercises: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.exercises);\n    };\n\n    return _this;\n  }\n\n  _createClass(Exercise, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadExercises();\n      console.log(this.state.exercises);\n      this.randomExercise();\n    }\n  }, {\n    key: \"randomExercise\",\n    value: function randomExercise() {\n      var itemsInArray = this.state.exercises.length;\n      var random = Math.floor(Math.random() * itemsInArray);\n      console.log(random);\n      var randomExercise = this.state.exercises[random];\n      console.log(randomExercise);\n      this.setState({\n        title: randomExercise\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*I am able to see the entries/exercises in the database here. \n      Still trying to figure out the best way to generate a random exercises from this list.*/\n      console.log(this.state.exercises);\n      var itemsInArray = this.state.exercises.length;\n      var random = Math.floor(Math.random() * itemsInArray);\n      console.log(random);\n      var randomExercise = this.state.exercises[random];\n      console.log(randomExercise);\n      return React.createElement(\"div\", {\n        className: \"parentElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.title), React.createElement(Timer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Exercise;\n}(Component);\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/mollygraham/Workout-App/Solved/client/src/pages/Exercise.js"],"names":["React","Component","Nav","Timer","Col","Row","Container","API","Exercise","state","exercises","title","loadExercises","getExercises","then","res","setState","data","catch","err","console","log","randomExercise","itemsInArray","length","random","Math","floor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,SAAS,EAAE,EADT;AAEFC,MAAAA,KAAK,EAAE;AAFL,K;;UAWNC,a,GAAgB,YAAM;AAClBL,MAAAA,GAAG,CAACM,YAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAEK,GAAG,CAACE;AAAjB,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGEC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWC,SAAvB;AACL,K;;;;;;;wCAXmB;AAChB,WAAKE,aAAL;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,SAAvB;AACA,WAAKY,cAAL;AACD;;;qCASc;AACb,UAAMC,YAAY,GAAG,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,MAA1C;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBF,YAA3B,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,UAAIH,cAAc,GAAG,KAAKb,KAAL,CAAWC,SAAX,CAAqBe,MAArB,CAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACA,WAAKN,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEW;AAAR,OAAd;AAEH;;;6BAEQ;AACL;;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,SAAvB;AACA,UAAMa,YAAY,GAAG,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,MAA1C;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBF,YAA3B,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,UAAIH,cAAc,GAAG,KAAKb,KAAL,CAAWC,SAAX,CAAqBe,MAArB,CAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AAEA,aAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKb,KAAL,CAAWE,KAAlB,CAFJ,EAGI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ;AAQH;;;;EA/CkBV,S;;AAkDvB,eAAeO,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Timer from \"../components/Timer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\n\nclass Exercise extends Component {\n    state={\n        exercises: [],\n        title: \"\"\n    }\n\n    componentDidMount() {\n        this.loadExercises();\n        console.log(this.state.exercises);\n        this.randomExercise();\n      }\n    \n    loadExercises = () => {\n        API.getExercises()\n          .then(res => this.setState({ exercises: res.data }))\n          .catch(err => console.log(err));\n          console.log(this.state.exercises)\n    };\n\n    randomExercise() {\n        const itemsInArray = this.state.exercises.length\n        const random = Math.floor(Math.random() * itemsInArray)\n        console.log(random)\n        let randomExercise = this.state.exercises[random]\n        console.log(randomExercise)\n        this.setState({title: randomExercise});\n        \n    }\n\n    render() {\n        /*I am able to see the entries/exercises in the database here. \n        Still trying to figure out the best way to generate a random exercises from this list.*/\n        console.log(this.state.exercises)\n        const itemsInArray = this.state.exercises.length\n        const random = Math.floor(Math.random() * itemsInArray)\n        console.log(random)\n        let randomExercise = this.state.exercises[random]\n        console.log(randomExercise)\n        \n        return (\n            \n            <div className=\"parentElement\">\n                <Nav />\n                <span>{this.state.title}</span>\n                <Timer />\n            </div>\n        )\n    }\n}\n\nexport default Exercise;"]},"metadata":{},"sourceType":"module"}