{"ast":null,"code":"import _classCallCheck from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollygraham/Workout-App/Solved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollygraham/Workout-App/Solved/client/src/components/Timer/index.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport \"./style.css\";\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      seconds: 30\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.myInterval = setInterval(function () {\n        _this2.setState(function (_ref) {\n          var seconds = _ref.seconds;\n          return {\n            seconds: seconds - 1\n          };\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var seconds = this.state.seconds;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, seconds, \"s\"));\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\n;\nexport default Timer;","map":{"version":3,"sources":["/Users/mollygraham/Workout-App/Solved/client/src/components/Timer/index.js"],"names":["React","useState","useEffect","Component","Timer","state","seconds","myInterval","setInterval","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,aAAP;;IAGMC,K;;;;;;;;;;;;;;;;;UA2BFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;;;;;wCAIY;AAAA;;AAChB,WAAKC,UAAL,GAAkBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACC,QAAL,CAAc;AAAA,cAAIH,OAAJ,QAAIA,OAAJ;AAAA,iBAAmB;AAC7BA,YAAAA,OAAO,EAAEA,OAAO,GAAG;AADU,WAAnB;AAAA,SAAd;AAGH,OAJ4B,EAI1B,IAJ0B,CAA7B;AAKH;;;6BAEQ;AAAA,UACGA,OADH,GACe,KAAKD,KADpB,CACGC,OADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,OADL,MADJ,CADJ;AAeH;;;;EAxDeH,S;;AAyDnB;AAED,eAAeC,KAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport \"./style.css\";\n\n\nclass Timer extends Component {\n\n    // const [seconds, setSeconds] = useState(30);\n    // const [isActive, setIsActive] = useState(false);\n\n    // When the toggle function is called it will change the value of isActive to be the opposite of what it currently is.\n    // function toggle() {\n    //     setIsActive(!isActive);\n    // }\n\n    // function reset() {\n    //     setSeconds(30);\n    //     setIsActive(false);\n    // }\n\n    // useEffect(() => {\n    //     let interval = null;\n    //     if (isActive) {\n    //       interval = setInterval(() => {\n    //         setSeconds(seconds => seconds - 1);\n    //       }, 1000);\n    //     } else if (!isActive && seconds !== 0) {\n    //       clearInterval(interval);\n    //     } \n    //     return () => clearInterval(interval);\n    // }, [isActive, seconds]);\n\n    state = {\n        seconds: 30\n    }\n\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            this.setState(( { seconds }) => ({\n                seconds: seconds - 1\n            }))\n        }, 1000)\n    }\n\n    render() {\n        const { seconds } = this.state\n        return (\n            <div className=\"app\">\n                <div className=\"time\">\n                    {seconds}s\n                </div>\n                {/* <div className=\"row\">\n                    <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n                        {isActive ? \"Start\" : \"Pause\"}\n                    </button>\n                    <button className=\"button\" onClick={reset}>\n                        Reset\n                    </button>\n                </div> */}\n            </div>\n        );\n    }\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}